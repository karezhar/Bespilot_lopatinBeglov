#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
"""
import os
import subprocess
import sys
from pathlib import Path

def run_command(command, description):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É —Å –≤—ã–≤–æ–¥–æ–º –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"""
    print(f"üîÑ {description}...")
    try:
        result = subprocess.run(command, shell=True, check=True, capture_output=True, text=True)
        print(f"‚úÖ {description} –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ {description}: {e}")
        print(f"–í—ã–≤–æ–¥ –æ—à–∏–±–∫–∏: {e.stderr}")
        return False

def setup_virtual_environment():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞"""
    print("üöÄ === –ù–ê–°–¢–†–û–ô–ö–ê –í–ò–†–¢–£–ê–õ–¨–ù–û–ì–û –û–ö–†–£–ñ–ï–ù–ò–Ø ===")
    print("=" * 50)
    
    # –ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
    BASE_DIR = os.path.expanduser('~/Bespilot_lopatinBeglov')
    VENV_DIR = os.path.join(BASE_DIR, 'venv')
    
    print(f"üìÅ –ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {BASE_DIR}")
    print(f"üêç –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ: {VENV_DIR}")
    
    # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    os.makedirs(BASE_DIR, exist_ok=True)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Python
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Python...")
    python_version = subprocess.run([sys.executable, '--version'], 
                                  capture_output=True, text=True).stdout.strip()
    print(f"‚úÖ {python_version}")
    
    # –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    if not run_command(f"python -m venv {VENV_DIR}", "–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è"):
        return False
    
    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º pip
    activate_script = os.path.join(VENV_DIR, 'bin', 'activate')
    if os.name == 'nt':  # Windows
        activate_script = os.path.join(VENV_DIR, 'Scripts', 'activate.bat')
    
    # –û–±–Ω–æ–≤–ª—è–µ–º pip
    pip_cmd = f"source {VENV_DIR}/bin/activate && pip install --upgrade pip"
    if os.name == 'nt':
        pip_cmd = f"{VENV_DIR}\\Scripts\\activate && pip install --upgrade pip"
    
    if not run_command(pip_cmd, "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip"):
        return False
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    requirements_path = os.path.join(BASE_DIR, 'requirements.txt')
    if os.path.exists(requirements_path):
        install_cmd = f"source {VENV_DIR}/bin/activate && pip install -r {requirements_path}"
        if os.name == 'nt':
            install_cmd = f"{VENV_DIR}\\Scripts\\activate && pip install -r {requirements_path}"
        
        if not run_command(install_cmd, "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"):
            return False
    else:
        print("‚ö†Ô∏è  –§–∞–π–ª requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞–∫–µ—Ç—ã...")
        basic_packages = "ultralytics torch torchvision Pillow PyYAML tqdm opencv-python matplotlib seaborn pandas numpy"
        install_cmd = f"source {VENV_DIR}/bin/activate && pip install {basic_packages}"
        if os.name == 'nt':
            install_cmd = f"{VENV_DIR}\\Scripts\\activate && pip install {basic_packages}"
        
        if not run_command(install_cmd, "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤"):
            return False
    
    # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    print(f"\nüìÑ –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏...")
    activate_script_content = f"""#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ Bespilot_lopatinBeglov
echo "üöÄ –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
source {VENV_DIR}/bin/activate
echo "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ!"
echo "üìÅ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"
echo "üêç Python: $(which python)"
echo "üì¶ –í–µ—Ä—Å–∏—è ultralytics: $(python -c 'import ultralytics; print(ultralytics.__version__)' 2>/dev/null || echo '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')"
"""
    
    if os.name == 'nt':
        activate_script_content = f"""@echo off
REM –°–∫—Ä–∏–ø—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ Bespilot_lopatinBeglov
echo üöÄ –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...
call {VENV_DIR}\\Scripts\\activate.bat
echo ‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ!
echo üìÅ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: %cd%
echo üêç Python: %where python%
"""
    
    activate_file = os.path.join(BASE_DIR, 'activate_env.sh' if os.name != 'nt' else 'activate_env.bat')
    with open(activate_file, 'w') as f:
        f.write(activate_script_content)
    
    # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º (–¥–ª—è Linux/Mac)
    if os.name != 'nt':
        os.chmod(activate_file, 0o755)
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: {activate_file}")
    
    # –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
    print(f"\nüìã –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é...")
    instruction_content = f"""# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è

## –ê–∫—Ç–∏–≤–∞—Ü–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è

### Linux/Mac:
```bash
cd ~/Bespilot_lopatinBeglov
source activate_env.sh
```

### Windows:
```cmd
cd ~/Bespilot_lopatinBeglov
activate_env.bat
```

## –†—É—á–Ω–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è

### Linux/Mac:
```bash
source ~/Bespilot_lopatinBeglov/venv/bin/activate
```

### Windows:
```cmd
~\\Bespilot_lopatinBeglov\\venv\\Scripts\\activate
```

## –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏

–ü–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:
```bash
python -c "import ultralytics; print('Ultralytics —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', ultralytics.__version__)"
python -c "import torch; print('PyTorch —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', torch.__version__)"
python -c "import tqdm; print('tqdm —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')"
```

## –ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞

1. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø–∞–ø–∫—É —Å–æ —Å–∫—Ä–∏–ø—Ç–∞–º–∏:
   ```bash
   cd ~/Bespilot_lopatinBeglov/scripts
   ```
3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç—ã –ø–æ –ø–æ—Ä—è–¥–∫—É:
   ```bash
   python check_dataset.py
   python convert_annotations_server.py
   python prepare_server_dataset.py
   python train_server.py
   ```

## –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è

```bash
deactivate
```
"""
    
    instruction_file = os.path.join(BASE_DIR, 'VENV_INSTRUCTIONS.md')
    with open(instruction_file, 'w') as f:
        f.write(instruction_content)
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: {instruction_file}")
    
    print(f"\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print(f"üìÅ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ: {VENV_DIR}")
    print(f"üìÑ –°–∫—Ä–∏–ø—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: {activate_file}")
    print(f"üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: {instruction_file}")
    
    print(f"\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print(f"1. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ: source {activate_file}")
    print(f"2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ {BASE_DIR}")
    print(f"3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö")

if __name__ == "__main__":
    setup_virtual_environment()
